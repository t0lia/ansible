---

- hosts: lenovo
  become: yes
  vars_files:
  - vars/default.yml
  tasks:

  - name: "Check gitea version"
    shell: "set -eo pipefail; /usr/local/bin/gitea -v | cut -d' ' -f 3"
    args:
      executable: /bin/bash
    register: gitea_active_version
    changed_when: false
    failed_when: false
    when: gitea_version_check|bool

  - name: "Download the binary"
    get_url:
      url: "{{ gitea_dl_url }}"
      dest: /usr/local/bin/gitea
      owner: root
      group: root
      mode: 0755
      force: true
    notify: "Restart gitea"
    when: (not gitea_version_check|bool) or (not ansible_check_mode and (gitea_active_version.stdout != gitea_version))

  - name: "Create Gitea user"
    user:
      name: "gitea"
      comment: "Gitea user"
      home: "/var/lib/gitea"
      shell: "/bin/false"

  - name: "Create config and data directory"
    file:
      path: "{{ item }}"
      state: directory
      owner: "{{ gitea_user }}"
    with_items:
      - "/etc/gitea"
      - "{{ gitea_home }}"
      - "{{ gitea_home }}/data"
      - "{{ gitea_home }}/custom"
      - "{{ gitea_home }}/custom/https"
      - "{{ gitea_home }}/custom/mailer"

  - name: "Setup systemd service"
    template:
      src: gitea.service.j2
      dest: /lib/systemd/system/gitea.service
      owner: root
      group: root
      mode: 0644
    notify:
      - "Reload systemd"
      - "Restart gitea"

  - name: "Configure gitea"
    template:
      src: gitea.ini.j2
      dest: /etc/gitea/gitea.ini
      owner: "{{ gitea_user }}"
      mode: 0600
    notify: "Restart gitea"

  - name: "Service gitea"
    service:
      name: gitea
      state: started
      enabled: true
    when: ansible_service_mgr == "systemd"


  handlers:
  - name: "Restart gitea"
    service:
      name: gitea
      state: restarted
    when: ansible_service_mgr == "systemd"

  - name: "Reload systemd"
    systemd:
      daemon_reload: true
    when: ansible_service_mgr == "systemd"

  - name: "Restart fail2ban"
    service:
      name: fail2ban
      state: restarted
      when: ansible_service_mgr == "systemd"
